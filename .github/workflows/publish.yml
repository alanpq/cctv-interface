name: 'Publish Docker Image'
on:
  push:
    branches: ['remake']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  tests:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
          uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix-build
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Access the outputs from the meta step and assign them to variables.
          TAGS=${{ steps.meta.outputs.tags }}
          VERSION=${{ steps.meta.outputs.version }}
          
          # Check if "latest" is among the tags, if not, add it.
          echo "$TAGS" | grep -q 'latest' || TAGS+=" latest"
          
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo TAGS=$TAGS
          
          # Tag the image with the version.
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          
          # Tag the image with all other tags.
          for tag in $TAGS; do
            docker tag $IMAGE_NAME $IMAGE_ID:$tag
          done
          
          # Push the image with all tags.
          docker push --all-tags $IMAGE_ID
