name: 'Publish Docker Image'
on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  tests:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix build
      - name: Load built image
        run: docker load < result
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Access the outputs from the meta step and assign them to variables.
          TAGS=${{ steps.meta.outputs.tags }}
          VERSION=${{ steps.meta.outputs.version }}

          # Check if "latest" is among the tags, if not, add it.
          echo "$TAGS" | grep -q 'latest' || TAGS+=" latest"

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo TAGS=$TAGS

          # Tag the image with the version.
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION

          # Tag the image with all other tags.
          for tag in $TAGS; do
            docker tag $IMAGE_NAME $IMAGE_ID:$tag
          done

          # Push the image with all tags.
          docker push --all-tags $IMAGE_ID
